{"version":3,"sources":["Components/Header/Header.js","services/api.js","Components/ConfigPagination/ConfigPagination.js","Components/CharacterInformation/CharacterInformation.js","Components/Filter/Filter.js","services/functions.js","Components/Characters/Characters.js","Components/Episodes/Episodes.js","Components/Locations/Locations.js","Components/MyWatch/MyWatch.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["Header","props","array","className","onClick","e","onCharacters","onEpisodes","onLocations","onMyWatch","url","requests","fetch","then","res","json","characters","str","arrayNumOfCharacters","arrayNumOfEpisodes","id","character","locations","arrayNumOfLocations","useStyles","makeStyles","theme","createStyles","ul","marginTop","spacing","marginLeft","paddingBottom","color","ConfigPagination","count","classes","Pagination","onChange","event","value","handleChange","myClassName","position","width","height","top","left","cursor","CharacterInformation","close","closeBox","IconButton","fontSize","src","image","alt","name","origin","status","gender","species","type","Filter","buttons","onFilterChange","useAutocomplete","options","getOptionLabel","option","onInputChange","freeSolo","clearOrBlur","clearOnEscape","getRootProps","getInputProps","getListboxProps","getOptionProps","groupedOptions","placeholder","length","map","index","generate","generateSpeciesArray","a","numbers","allNames","i","push","forEach","it","Set","generateEpisodesNamesArray","generateCharactersNamesArray","num","filterNames","filter","generateString","textSpecies","toLowerCase","textStatus","textGender","generateStringLocations","dimension","textName","textDimension","textType","generateNumbersArray","number","Number","toString","save","generateLocationsNamesArray","generateLocationsDimensionArray","allDimensions","dimensionsFiltered","undefined","generateLocationsTypeArray","allTypes","typesFiltered","statusList","genderList","Characters","useState","setCharacter","setCount","twelveCharacters","setTwelveCharacters","setSpecies","setStatus","setGender","error","setError","speciesList","setSpeciesList","showButton","setShowButton","setFilter","string","setString","numberNewPage","newString","substring","newPageFiltered","results","newPageCharacters","newCharacters","setTimeout","info","pages","useEffect","getSpeciesArray","disabled","getCharacterInf","newPage","Episodes","episodes","setEpisodes","episodesRender","setEpisodesRender","filterName","setFilterName","namesList","setNamesList","newPageEpisodes","newEpisodes","getEpisodes","boolean","episode","created","slice","Locations","setLocations","locationsRender","setLocationsRender","filterDimension","setFilterDimension","filterType","setFilterType","dimensionList","setDimensionList","typesList","setTypesList","names","types","getNameArray","getDimentionArray","getTypeArray","location","MyWatch","elements","setElements","input","setInput","ele","find","target","indEle","indexOf","updateArray","complete","checked","savedState","localStorage","myWatch","JSON","parse","getNamesArray","setItem","stringify","some","Date","now","result","concat","element","FormControlLabel","control","Switch","label","App","setCharacters","arrayShow","setOnArrayShow","onButton","Array","getCharacters","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0bdb99c.chunk.js","sourcesContent":["import './Header.scss';\r\n\r\nexport function Header(props){\r\n    const {array} = props\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <button className={array[0] === true ? 'selected' : null} onClick={(e) => props.onCharacters(e)}>Characters</button>\r\n            <button className={array[1] === true ? 'selected' : null} onClick={(e) => props.onEpisodes(e)}>Episodes</button>\r\n            <button className={array[2] === true ? 'selected' : null} onClick={(e) => props.onLocations(e)}>Locations</button>\r\n            <button className={array[3] === true ? 'selected' : null} onClick={(e) => props.onMyWatch(e)}>My watch</button>\r\n        </div>\r\n    )\r\n}","const url = 'https://rickandmortyapi.com/api';\r\n\r\nexport const requests = {\r\n    getCharacters: function (){\r\n        return fetch(url + '/character')\r\n            .then(res => res.json())\r\n            .then((characters) => {return characters});\r\n    },\r\n    getCharactersFilter: function (str){\r\n        return fetch(url + `/character/${str}` )\r\n            .then(res => res.json())\r\n            .then((characters) => {return characters});\r\n    },\r\n    getMultiplyCharacters: function (arrayNumOfCharacters){\r\n        return fetch(url + '/character/' + arrayNumOfCharacters)\r\n            .then(res => res.json())\r\n            .then((characters) => {return characters});\r\n    },\r\n    getEpisodes: function (){\r\n        return fetch(url + '/episode')\r\n            .then(res => res.json())\r\n            .then((characters) => {return characters});\r\n    },\r\n    getMultiplyEpisodes: function (arrayNumOfEpisodes){\r\n        return fetch(url + '/episode/' + arrayNumOfEpisodes)\r\n            .then(res => res.json())\r\n            .then((characters) => {return characters});\r\n    },\r\n    getEpisodesFilter: function (str){\r\n        return fetch(url + `/episode/${str}` )\r\n            .then(res => res.json())\r\n            .then((characters) => {return characters});\r\n    },\r\n    getCharacter: function (id){\r\n        return fetch(url + '/character/' + id)\r\n            .then(res => res.json())\r\n            .then((character) => {return character});\r\n    },\r\n    getLocations: function (){\r\n        return fetch(url + '/location')\r\n            .then(res => res.json())\r\n            .then((locations) => {return locations});\r\n    },\r\n    getMultiplyLocations: function (arrayNumOfLocations){\r\n        return fetch(url + '/location/' + arrayNumOfLocations)\r\n            .then(res => res.json())\r\n            .then((locations) => {return locations});\r\n    },\r\n    getLocationFilter: function (str){\r\n        return fetch(url + `/location/${str}` )\r\n            .then(res => res.json())\r\n            .then((characters) => {return characters});\r\n    }\r\n}","import {createStyles, makeStyles} from \"@material-ui/core/styles\";\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        ul: {\r\n            marginTop: theme.spacing(2),\r\n            marginLeft: 360,\r\n            paddingBottom: 20,\r\n            '& .MuiPaginationItem-root': {\r\n                color: '#fff'\r\n            },\r\n        },\r\n    }),\r\n);\r\n\r\nexport function ConfigPagination(props){\r\n    const {count} = props\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <>\r\n            <Pagination\r\n                classes={{ul: classes.ul}}\r\n                count={count}\r\n                color=\"secondary\"\r\n                onChange={(event, value) => {props.handleChange(value)}}\r\n            />\r\n        </>\r\n    )\r\n}","import './CharacterInformation.scss';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    myClassName: {\r\n        color: \"black\",\r\n        position: 'relative',\r\n        width: 40,\r\n        height: 40,\r\n        top: '0',\r\n        left: '0',\r\n        \"&:hover\": {\r\n            cursor: 'pointer',\r\n        }\r\n    }\r\n}));\r\n\r\nexport function CharacterInformation(props){\r\n    const {character} = props\r\n    const classes = useStyles();\r\n    const close = props.closeBox;\r\n\r\n    return(\r\n        <div className=\"containerInf\">\r\n            <div className=\"boxCenter\">\r\n                <IconButton className={classes.myClassName} onClick={close}>\r\n                    <CloseIcon fontSize='large'/>\r\n                </IconButton>\r\n                <img src={character.image} alt={character.name}/>\r\n                <ul>\r\n                    <li>Name: {character.name === \"unknown\" ? 'Not Found' : character.name}</li>\r\n                    <li>Original Name: {character.origin.name === \"unknown\" ? 'Not Found' : character.origin.name}</li>\r\n                    <li>Status: {character.status === \"unknown\" ? 'Not Found' : character.status}</li>\r\n                    <li>Gender: {character.gender === \"unknown\" ? 'Not Found' : character.gender}</li>\r\n                    <li>Species: {character.species === \"unknown\" ? 'Not Found' : character.species}</li>\r\n                    <li>Type: {character.type === \"\" ? 'Not Found' : character.type}</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import './Filter.scss';\r\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\r\n\r\nexport function Filter(props){\r\n    const {buttons, name} = props\r\n    const {onFilterChange} = props;\r\n\r\n    const {\r\n        getRootProps,\r\n        getInputProps,\r\n        getListboxProps,\r\n        getOptionProps,\r\n        groupedOptions\r\n    } = useAutocomplete({\r\n        options: buttons,\r\n        getOptionLabel: (option) => option,\r\n        onInputChange: (event, value) => onFilterChange && onFilterChange(value),\r\n        freeSolo: true,\r\n        clearOrBlur: false,\r\n        clearOnEscape: true,\r\n    });\r\n\r\n    return(\r\n        <>\r\n            <div className='box' {...getRootProps()}>\r\n                <input placeholder={name} {...getInputProps()} />\r\n            </div>\r\n            <div className='box-input'>\r\n                {groupedOptions.length > 0 ? (\r\n                    <ul{...getListboxProps()}>\r\n                        {groupedOptions.map((option, index) => (\r\n                            <li {...getOptionProps({ option, index })}>{option}</li>\r\n                        ))}\r\n                    </ul>\r\n                ) : null}\r\n            </div>\r\n        </>\r\n    )\r\n}","import {requests} from \"./api\";\r\n\r\nexport const generate = {\r\n    generateSpeciesArray: async function(){\r\n        const numbers =  [];\r\n        const allNames = [];\r\n        for(let i = 0; i < 100; i++){numbers.push(i)}\r\n        const characters = await requests.getMultiplyCharacters(numbers);\r\n        characters.forEach(it => {allNames.push(it.species)})\r\n        return [...new Set(allNames)];\r\n    },\r\n    generateEpisodesNamesArray: async function(){\r\n        const numbers =  [];\r\n        const allNames = [];\r\n        for(let i = 0; i < 100; i++){numbers.push(i)}\r\n        const episodes = await requests.getMultiplyEpisodes(numbers);\r\n        episodes.forEach(it => {allNames.push(it.name)})\r\n        return [...new Set(allNames)];\r\n    },\r\n    generateCharactersNamesArray: async function(num){\r\n        const numbers =  [];\r\n        const allNames = [];\r\n        for(let i = 0; i < num; i++){numbers.push(i)}\r\n        const episodes = await requests.getMultiplyLocations(numbers);\r\n        episodes.forEach(it => {allNames.push(it.name)})\r\n        const filterNames = allNames.filter(it=> it !== \"unknown\");\r\n        return [...new Set(filterNames)];\r\n    },\r\n    generateString: function(species, status, gender){\r\n        const textSpecies = `species=${species && species.toLowerCase()}`;\r\n        const textStatus = `status=${status && status.toLowerCase()}`;\r\n        const textGender = `gender=${ gender.toLowerCase()}`;\r\n        return `?${species && textSpecies}&${status && textStatus}&${gender && textGender}`;\r\n    },\r\n    generateStringLocations: function(name, dimension, type){\r\n        const textName = `name=${name && name.toLowerCase()}`;\r\n        const textDimension = `dimension=${dimension && dimension.toLowerCase()}`;\r\n        const textType = `type=${type && type.toLowerCase()}`;\r\n        return `?${name && textName}&${dimension && textDimension}&${type && textType}`;\r\n    },\r\n    generateNumbersArray: function(number){\r\n        const array = [];\r\n        if(number !== 1 && number !== 2){\r\n            number = number + number - 2\r\n        }\r\n        let num = Number(number.toString().length === 1 && number === 1  ? number : number + '0')\r\n        let save = Number(num)\r\n        for(let i = 0; i < 20; i++){\r\n            array.push(save)\r\n            save++\r\n        }\r\n        return array;\r\n    },\r\n    generateLocationsNamesArray: async function(){\r\n        const numbers =  [];\r\n        const allNames = [];\r\n        for(let i = 0; i < 100; i++){numbers.push(i)}\r\n        const episodes = await requests.getMultiplyLocations(numbers);\r\n        episodes.forEach(it => {allNames.push(it.name)})\r\n        return [...new Set(allNames)];\r\n    },\r\n    generateLocationsDimensionArray: async function(){\r\n        const numbers =  [];\r\n        const allDimensions = [];\r\n        for(let i = 0; i < 100; i++){numbers.push(i)}\r\n        const episodes = await requests.getMultiplyLocations(numbers);\r\n        episodes.forEach(it => {allDimensions.push(it.dimension)})\r\n        const dimensionsFiltered = allDimensions.filter(it => it !== undefined);\r\n        return [...new Set(dimensionsFiltered)];\r\n    },\r\n    generateLocationsTypeArray: async function(){\r\n        const numbers =  [];\r\n        const allTypes = [];\r\n        for(let i = 0; i < 100; i++){numbers.push(i)}\r\n        const episodes = await requests.getMultiplyLocations(numbers);\r\n        episodes.forEach(it => {allTypes.push(it.type)})\r\n        const typesFiltered = allTypes.filter(it => it !== undefined);\r\n        return [...new Set(typesFiltered)];\r\n    }\r\n}\r\n","import './Characters.scss'\r\nimport {useEffect, useState} from \"react\";\r\nimport {ConfigPagination} from '../ConfigPagination/ConfigPagination';\r\nimport {requests} from \"../../services/api\";\r\nimport {CharacterInformation} from \"../CharacterInformation/CharacterInformation\";\r\nimport {Filter} from '../Filter/Filter';\r\nimport {generate} from \"../../services/functions\";\r\n\r\nconst statusList = [\r\n    'Alive',\r\n    'Dead',\r\n    'Unknown'\r\n]\r\nconst genderList = [\r\n    'Female',\r\n    'Male',\r\n    'Genderless',\r\n    'Unknown'\r\n]\r\n\r\n\r\nexport function Characters(props){\r\n    const {characters} = props\r\n    const [character, setCharacter] = useState('');\r\n    const [count, setCount] = useState(0);\r\n    const [twelveCharacters, setTwelveCharacters] = useState('');\r\n    const [species, setSpecies] = useState('');\r\n    const [status, setStatus] = useState('');\r\n    const [gender, setGender] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [speciesList, setSpeciesList] = useState('');\r\n    const [showButton, setShowButton] = useState(false);\r\n    const [filter, setFilter] = useState(false);\r\n    const [string, setString] = useState('');\r\n\r\n    async function newPage(numberNewPage){\r\n        if(filter){\r\n            const newString = `?page=${numberNewPage}${string.substring(1)}`\r\n            const newPageFiltered = await requests.getCharactersFilter(newString);\r\n            setTwelveCharacters(newPageFiltered.results);\r\n            return\r\n        }\r\n        const array = generate.generateNumbersArray(numberNewPage);\r\n        const newPageCharacters = await requests.getMultiplyCharacters(array);\r\n        setTwelveCharacters(newPageCharacters);\r\n    }\r\n    async function getCharacterInf(id){\r\n        const character = await requests.getCharacter(id);\r\n        setCharacter(character);\r\n    }\r\n    async function getCharacterFilter(){\r\n        const str = await generate.generateString(species,status,gender);\r\n        const newCharacters = await requests.getCharactersFilter(str);\r\n        if(newCharacters.error){\r\n            setError('Hasn\\'t characters with specifies fiters');\r\n            setTimeout(()=>{\r\n                setError('')\r\n            },3000)\r\n            return\r\n        }\r\n        setTwelveCharacters(newCharacters.results);\r\n        setCount(newCharacters.info.pages);\r\n        setShowButton(true);\r\n        setString(str);\r\n        setFilter(true);\r\n    }\r\n    function onNoFilter(){\r\n        setTwelveCharacters(characters.results);\r\n        setCount(characters.info.pages);\r\n        setShowButton(false);\r\n        setFilter(false);\r\n        setSpecies('');\r\n        setStatus('');\r\n        setGender('');\r\n    }\r\n\r\n    useEffect(()=>{\r\n        function rewrite(){\r\n            setTwelveCharacters(characters.results);\r\n            setCount(characters.info.pages);\r\n        }\r\n        async function getSpeciesArray(){\r\n            const species = await generate.generateSpeciesArray();\r\n            setSpeciesList(species);\r\n        }\r\n        rewrite();\r\n        getSpeciesArray();\r\n\r\n        // eslint-disable-next-line\r\n    },[])\r\n\r\n    return(\r\n        <>\r\n            {character && <CharacterInformation character={character} closeBox={()=> setCharacter('')}/>}\r\n            <div className='box'>\r\n                <Filter buttons={speciesList} onFilterChange={setSpecies} name={'Filter by Species...'}/>\r\n                <Filter buttons={statusList} onFilterChange={setStatus} name={'Filter by Status...'}/>\r\n                <Filter buttons={genderList} onFilterChange={setGender} name={'Filter by Gender...'}/>\r\n                <button disabled={!species && !status && !gender} onClick={getCharacterFilter}>Filter</button>\r\n                {showButton && <button onClick={onNoFilter}>No Filter</button>}\r\n            </div>\r\n            {error && <div className='error'><p>{error}</p></div>}\r\n            <div className=\"characters\">\r\n                <ul>\r\n                    {twelveCharacters && twelveCharacters\r\n                        .map((character) => (\r\n                            <li key={character.id} onClick={()=> {getCharacterInf(character.id)}}>\r\n                                <img src={character.image} alt={character.name}/>\r\n                                <p>{character.name}</p>\r\n                                <p>Status: {character.status === \"unknown\" ? 'Not Found' : character.status}</p>\r\n                                <p>Number: {character.id}</p>\r\n                            </li>\r\n                        ))}\r\n                </ul>\r\n            </div>\r\n            <ConfigPagination\r\n                count={count && count}\r\n                handleChange={(value)=> {newPage(value)}}\r\n            />\r\n        </>\r\n    )\r\n}","import './Episodes.scss'\r\nimport {useEffect, useState} from \"react\";\r\nimport {ConfigPagination} from '../ConfigPagination/ConfigPagination';\r\nimport {requests} from \"../../services/api\";\r\nimport {Filter} from '../Filter/Filter';\r\nimport {generate} from \"../../services/functions\";\r\n\r\nexport function Episodes(){\r\n    const [episodes, setEpisodes] = useState('');\r\n    const [episodesRender, setEpisodesRender] = useState('');\r\n    const [count, setCount] = useState(0);\r\n    const [filterName, setFilterName] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [showButton, setShowButton] = useState(false);\r\n    const [namesList, setNamesList] = useState('');\r\n    const [filter, setFilter] = useState(false);\r\n    const [string, setString] = useState('');\r\n\r\n    async function newPage(numberNewPage){\r\n        if(filter){\r\n            const newString = `?page=${numberNewPage}&${string.substring(1)}`\r\n            const newPageFiltered = await requests.getEpisodesFilter(newString);\r\n            setEpisodesRender(newPageFiltered.results);\r\n            return\r\n        }\r\n        const array = generate.generateNumbersArray(numberNewPage);\r\n        const newPageEpisodes = await requests.getMultiplyEpisodes(array);\r\n        setEpisodesRender(newPageEpisodes);\r\n    }\r\n    async function getEpisodesFilter(){\r\n        if(!filterName) return\r\n        const str = `?name=${filterName.toLowerCase()}`;\r\n        const newEpisodes = await requests.getEpisodesFilter(str);\r\n        if(newEpisodes.error){\r\n            setError('Hasn\\'t episodes with specifies fiters');\r\n            setTimeout(()=>{\r\n                setError('')\r\n            },3000)\r\n            return\r\n        }\r\n        setEpisodesRender(newEpisodes.results);\r\n        setCount(newEpisodes.info.pages);\r\n        setShowButton(true);\r\n        setString(str);\r\n        setFilter(true);\r\n    }\r\n    function onNoFilter(){\r\n        setEpisodesRender(episodes.results);\r\n        setCount(episodes.info.pages);\r\n        setShowButton(false);\r\n        setFilterName('');\r\n        setFilter(false);\r\n    }\r\n\r\n    useEffect(()=> {\r\n        async function getEpisodes() {\r\n            const episodes = await requests.getEpisodes();\r\n            setEpisodes(episodes);\r\n            setEpisodesRender(episodes.results);\r\n            setCount(episodes.info.pages)\r\n        }\r\n        async function getSpeciesArray(){\r\n            const species = await generate.generateEpisodesNamesArray()\r\n            setNamesList(species);\r\n        }\r\n        getEpisodes();\r\n        getSpeciesArray();\r\n    },[])\r\n\r\n    return(\r\n        <>\r\n            <div className='box'>\r\n                <Filter buttons={namesList} onFilterChange={setFilterName} boolean={showButton} name={'Filter by Name...'}/>\r\n                <button disabled={!filterName} onClick={getEpisodesFilter}>Filter</button>\r\n                {showButton && <button onClick={onNoFilter}>No Filter</button>}\r\n            </div>\r\n            {error && <div className='error'><p>{error}</p></div>}\r\n            <div className=\"episodes\">\r\n                <ul>\r\n                    <li>\r\n                        <p>NUMBER</p>\r\n                        <p>NAME</p>\r\n                        <p>EPISODE</p>\r\n                        <p>DATE</p>\r\n                    </li>\r\n                    {episodesRender && episodesRender\r\n                        .map((episode) => (\r\n                            <li key={episode.id}>\r\n                                <p>{episode.id}</p>\r\n                                <p>{episode.name}</p>\r\n                                <p>{episode.episode && episode.episode}</p>\r\n                                <p>{episode.created && episode.created.slice(0,10)}</p>\r\n                            </li>\r\n                        ))}\r\n                </ul>\r\n            </div>\r\n            <ConfigPagination\r\n                count={count && count}\r\n                handleChange={(value)=> {newPage(value)}}\r\n            />\r\n        </>\r\n    )\r\n}","import {useEffect, useState} from \"react\";\r\nimport {ConfigPagination} from '../ConfigPagination/ConfigPagination';\r\nimport {requests} from \"../../services/api\";\r\nimport {Filter} from '../Filter/Filter';\r\nimport {generate} from \"../../services/functions\";\r\n\r\nexport function Locations(){\r\n    const [locations, setLocations] = useState('');\r\n    const [locationsRender, setLocationsRender] = useState('');\r\n    const [count, setCount] = useState(0);\r\n    const [filterName, setFilterName] = useState('');\r\n    const [filterDimension, setFilterDimension] = useState('');\r\n    const [filterType, setFilterType] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [showButton, setShowButton] = useState(false);\r\n    const [namesList, setNamesList] = useState('');\r\n    const [dimensionList, setDimensionList] = useState('');\r\n    const [typesList, setTypesList] = useState('');\r\n    const [filter, setFilter] = useState(false);\r\n    const [string, setString] = useState('');\r\n\r\n    async function newPage(numberNewPage){\r\n        if(filter){\r\n            const newString = `?page=${numberNewPage}&${string.substring(1)}`\r\n            const newPageFiltered = await requests.getLocationFilter(newString);\r\n            setLocationsRender(newPageFiltered.results);\r\n            return\r\n        }\r\n        const array = generate.generateNumbersArray(numberNewPage);\r\n        const newPageEpisodes = await requests.getMultiplyLocations(array);\r\n        setLocationsRender(newPageEpisodes);\r\n    }\r\n    async function getLocationFilter(){\r\n        const str = await generate.generateStringLocations(filterName,filterDimension,filterType);\r\n        const newCharacters = await requests.getLocationFilter(str);\r\n        if(newCharacters.error){\r\n            setError('Hasn\\'t locations with specifies fiters');\r\n            setTimeout(()=>{\r\n                setError('')\r\n            },3000)\r\n            return\r\n        }\r\n        setLocationsRender(newCharacters.results);\r\n        setCount(newCharacters.info.pages);\r\n        setShowButton(true);\r\n        setString(str);\r\n        setFilter(true);\r\n    }\r\n    function onNoFilter(){\r\n        setLocationsRender(locations.results);\r\n        setCount(locations.info.pages);\r\n        setShowButton(false);\r\n        setFilterName('');\r\n        setFilter(false);\r\n    }\r\n\r\n    useEffect(()=> {\r\n        async function getEpisodes() {\r\n            const locations = await requests.getLocations();\r\n            setLocations(locations);\r\n            setLocationsRender(locations.results);\r\n            setCount(locations.info.pages)\r\n        }\r\n        async function getNameArray(){\r\n            const names = await generate.generateLocationsNamesArray()\r\n            setNamesList(names);\r\n        }\r\n        async function getDimentionArray(){\r\n            const dimension = await generate.generateLocationsDimensionArray()\r\n            setDimensionList(dimension);\r\n        }\r\n        async function getTypeArray(){\r\n            const types = await generate.generateLocationsTypeArray()\r\n            setTypesList(types);\r\n        }\r\n        getEpisodes();\r\n        getNameArray();\r\n        getDimentionArray();\r\n        getTypeArray();\r\n    },[])\r\n\r\n    return(\r\n        <>\r\n            <div className='box'>\r\n                <Filter buttons={namesList} onFilterChange={setFilterName} boolean={showButton} name={'Filter by Name...'}/>\r\n                <Filter buttons={dimensionList} onFilterChange={setFilterDimension} name={'Filter by Dimension...'}/>\r\n                <Filter buttons={typesList} onFilterChange={setFilterType} name={'Filter by Type...'}/>\r\n                <button disabled={!filterName && !filterDimension && !filterType} onClick={getLocationFilter}>Filter</button>\r\n                {showButton && <button onClick={onNoFilter}>No Filter</button>}\r\n            </div>\r\n            {error && <div className='error'><p>{error}</p></div>}\r\n            <div className=\"episodes\">\r\n                <ul>\r\n                    <li>\r\n                        <p>NUMBER</p>\r\n                        <p>NAME</p>\r\n                        <p>DIMENSION</p>\r\n                        <p>TYPE</p>\r\n                    </li>\r\n                    {locationsRender && locationsRender\r\n                        .map((location) => (\r\n                            <li key={location.id}>\r\n                                <p>{location.id}</p>\r\n                                <p>{location.name}</p>\r\n                                <p>{location.dimension === 'unknown' ? 'Unknown' : location.dimension}</p>\r\n                                <p>{location.type}</p>\r\n                            </li>\r\n                        ))}\r\n                </ul>\r\n            </div>\r\n            <ConfigPagination\r\n                count={count && count}\r\n                handleChange={(value)=> {newPage(value)}}\r\n            />\r\n        </>\r\n    )\r\n}","import './MyWatch.scss'\r\nimport {useEffect, useState} from \"react\";\r\nimport {Filter} from '../Filter/Filter';\r\nimport {generate} from \"../../services/functions\";\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nexport function MyWatch(props){\r\n    const {characters} = props;\r\n    const [elements, setElements] = useState('');\r\n    const [input, setInput] = useState('');\r\n    const [namesList, setNamesList] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleChange = (event) => {\r\n        const ele = elements.find(it=> it.id === Number(event.target.value));\r\n        const indEle = elements.indexOf(ele);\r\n        const updateArray = [...elements];\r\n        updateArray[indEle].complete = event.target.checked;\r\n        setElements(updateArray);\r\n    };\r\n\r\n\r\n    function createElement(){\r\n        const array = [];\r\n        if(elements && elements.some(it => it.name === input)){\r\n            setError('This element has been already included in your list');\r\n            setTimeout(()=>{\r\n                setError('')\r\n            },3000)\r\n            return\r\n        }\r\n        array.push({\r\n            id: Date.now(),\r\n            name: input,\r\n            complete: false\r\n        });\r\n        if(!elements){\r\n            setElements(array);\r\n            return;\r\n        }\r\n        const result = elements.concat(array);\r\n        setElements(result);\r\n    }\r\n    function deleteElement(id){\r\n       setElements(elements.filter(it=> it.id !== id))\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const savedState = localStorage.myWatch ? JSON.parse(localStorage.myWatch) : null;\r\n        setElements(savedState)\r\n\r\n        async function getNamesArray(){\r\n            const names = await generate.generateCharactersNamesArray(characters.info.count);\r\n            setNamesList(names);\r\n        }\r\n        getNamesArray();\r\n\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        localStorage.setItem('myWatch', JSON.stringify(elements));\r\n    }, [elements]);\r\n\r\n    return(\r\n        <>\r\n            <div className='box'>\r\n                <Filter buttons={namesList} onFilterChange={setInput} name={'Input on choose...'}/>\r\n                <button disabled={!input} onClick={createElement}>Add</button>\r\n            </div>\r\n            {error && <div className='error'><p>{error}</p></div>}\r\n            <div className=\"characters\">\r\n                <ul>\r\n                    {elements && elements\r\n                        .map((element) => (\r\n                            <li key={element.id}>\r\n                                <p>{element.name}</p>\r\n                                <FormControlLabel\r\n                                    value={element.id}\r\n                                    control={<Switch/>}\r\n                                    label=\"Complete\"\r\n                                    onChange={handleChange}\r\n                                    checked={element.complete === true}\r\n                                />\r\n                                <button onClick={() => deleteElement(element.id)}>Delete</button>\r\n                            </li>\r\n                        ))}\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n}","import './App.scss';\r\nimport {Header} from \"../Header/Header\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {requests} from \"../../services/api\";\r\nimport {Characters} from \"../Characters/Characters\";\r\nimport {Episodes} from \"../Episodes/Episodes\";\r\nimport {Locations} from \"../Locations/Locations\";\r\nimport {MyWatch} from \"../MyWatch/MyWatch\";\r\n\r\n\r\nexport default function App() {\r\n    const [characters, setCharacters] = useState('');\r\n    const [arrayShow, setOnArrayShow] = useState([true, false,false,false])\r\n\r\n    useEffect(() => {\r\n       async function getCharacters (){\r\n            const characters = await requests.getCharacters();\r\n            setCharacters(characters);\r\n       }\r\n       getCharacters();\r\n    },[])\r\n\r\n    function onButton(number){\r\n        const Array = [false, false, false, false];\r\n        Array[number-1] = true;\r\n        setOnArrayShow(Array);\r\n    }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header\r\n          array={arrayShow}\r\n        onCharacters={() => {onButton(1)}}\r\n        onEpisodes={() => {onButton(2)}}\r\n        onLocations={() => {onButton(3)}}\r\n        onMyWatch={() => {onButton(4)}}\r\n      />\r\n        {characters && arrayShow[0] && <Characters characters={characters}/>}\r\n        {arrayShow[1] && <Episodes/>}\r\n        {arrayShow[2] && <Locations/>}\r\n        {arrayShow[3] && <MyWatch characters={characters}/>}\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './styles.scss'\r\nimport App from './Components/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}